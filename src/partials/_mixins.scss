@mixin noise {
  background-image: linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.05) 25%,
      transparent 25%
    ),
    linear-gradient(45deg, rgba(255, 255, 255, 0.05) 25%, transparent 25%);
  background-size: 5px 5px;
  background-position: 0 0, 2.5px 2.5px;
}

@mixin pseudo {
  content: "";
  position: absolute;
  height: 10px;
  width: 10px;
  @include border-radius(50%);
  background: $gradient;
  @include transition;
}

@mixin pseudo2 {
  content: "";
  position: absolute;
  height: 10px;
  width: 10px;
  @include border-radius(50%);
  background: $gradient;
  @include transition;
}

@mixin flex($justify) {
  display: flex;
  align-items: center;
  justify-content: $justify;
}

@mixin grid($column) {
  display: grid;
  align-items: center;
  grid-template-columns: $column;
}
@mixin input-style {
  width: 100%!important;
  padding: 15px;
  outline: none;
  border: none;
  background: #373f47;
  margin-bottom: 15px;
  margin-top: 10px;
  font-size: 0.9rem;
  color: inherit;

  
  &:focus {
    border: 1px solid $yellow-color;
  }
}

@mixin prefixes($property, $value) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  #{$property}: $value;
}

@mixin border-radius($radius) {
  @include prefixes("border-radius", $radius);
}

@mixin transform($rotate) {
  @include prefixes("transform", rotate($rotate));
}

@mixin transition($transition: 0.3s ease-in-out) {
  @include prefixes("transition", $transition);
}

// Media Mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == "extra-small" {
    @media only screen and (max-width: 578px) {
      @content;
    }
  } @else if $breakpoint == "small" {
    @media only screen and (max-width: 768px) {
      @content;
    }
  } @else if $breakpoint == "medium" {
    @media only screen and (max-width: 992px) {
      @content;
    }
  } @else if $breakpoint == "large" {
    @media only screen and (max-width: 1200px) {
      @content;
    }
  }
}
